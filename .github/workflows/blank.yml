name: CI

on:
  push:
    branches:
      - develop
      - master
      - dev
      - ci
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 0 * * 0'

jobs:
  my_job:
    name: test Nginx-ee
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04, ubuntu-24.04]
    steps:
    - uses: actions/checkout@v4
    - name: Prepare VM
      run: sudo bash tests.sh
    - name: Install packages
      run: NEEDRESTART_SUSPEND=y sudo apt-get install -y git build-essential libtool automake autoconf libgd-dev dpkg-dev libgeoip-dev libjemalloc-dev libbz2-1.0 libreadline-dev libbz2-dev libbz2-ocaml libbz2-ocaml-dev software-properties-common tar libgoogle-perftools-dev perl libperl-dev libpam0g-dev libbsd-dev gnupg gnupg2 libgmp-dev autotools-dev libxml2-dev libpcre3-dev uuid-dev libbrotli-dev libpcre2-dev libssl-dev
    - name: Mainline build
      run: sudo bash nginx-build.sh || cat /tmp/nginx-ee.log
    - name : Nginx check Mainline build
      run: sudo nginx -V || cat /tmp/nginx-ee.log
    - name: Stable build
      run: sudo bash nginx-build.sh --stable
    - name : Nginx check Stable build
      run: sudo nginx -V
    - name: Full build stable
      run: sudo bash nginx-build.sh --full --stable
    - name : Nginx check Full build stable
      run: sudo nginx -V
    - name: Mainline naxsi
      run: sudo bash nginx-build.sh --naxsi || cat /tmp/nginx-ee.log
    - name : Nginx check Mainline naxsi
      run: sudo nginx -V
    - name: libressl build
      run: sudo bash nginx-build.sh --libressl || cat /tmp/nginx-ee.log
    - name : Nginx check libressl build
      run: sudo nginx -V
    - name: dynamic build
      run: sudo bash nginx-build.sh --dynamic || cat /tmp/nginx-ee.log
      
