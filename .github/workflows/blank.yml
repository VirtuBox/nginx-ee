name: CI

on:
  push:
    branches:
      - develop
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 0 * * 0'

jobs:
  my_job:
    name: test Nginx-ee
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]

    steps:
    - uses: actions/checkout@v3
    - name: Prepare VM
      run: |
        sudo apt-get update -qq
        sudo apt install make libunwind-dev libgoogle-perftools-dev ccze -y
        sudo LC_ALL=C.UTF-8 add-apt-repository ppa:ondrej/php -y
        sudo rm -rf /etc/mysql /var/lib/mysql /etc/nginx
        sudo apt-get purge --option=Dpkg::options::=--force-all --assume-yes graphviz* redis* mysql* nginx || sudo dpkg --configure -a
    - name: Mainline build
      run: sudo bash nginx-build.sh || cat /tmp/nginx-ee.log | ccze -A
    - name : Nginx check Mainline build
      run: sudo nginx -V || cat /tmp/nginx-ee.log
    - name: Stable build
      run: sudo bash nginx-build.sh --stable || cat /tmp/nginx-ee.log | ccze -A
    - name : Nginx check Stable build
      run: sudo nginx -V
    - name: Full build stable
      run: sudo bash nginx-build.sh --full --stable || cat /tmp/nginx-ee.log | ccze -A
    - name : Nginx check Full build stable
      run: sudo nginx -V
    - name: Mainline naxsi
      run: sudo bash nginx-build.sh --naxsi || cat /tmp/nginx-ee.log | ccze -A
    - name : Nginx check Mainline naxsi
      run: sudo nginx -V
    - name: libressl build
      run: sudo bash nginx-build.sh --libressl || cat /tmp/nginx-ee.log | ccze -A
    - name : Nginx check libressl build
      run: sudo nginx -V
    - name: dynamic build
      run: sudo bash nginx-build.sh --dynamic || cat /tmp/nginx-ee.log | ccze -A
      
